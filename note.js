//x state
const csslist = [
    //variable
    "--*",
    //property
    "-webkit-text-fill-color",
    "-webkit-text-stroke", 
    "-webkit-text-stroke-color", 
    "-webkit-text-stroke-width",
    
    "align-content",
    "align-items",
    "align-self",
    "all",

    "animation",
    "animation-composition", 
    "animation-delay", 
    "animation-direction", 
    "animation-duration ",
    "animation-fill-mode ",
    "animation-iteration-count",
    "animation-name",
    "animation-play-state", 
    "animation-range",
    "animation-range-end",
    "animation-range-start",
    "animation-timeline",
    "animation-timing-function",
    "appearance",
    "aspect-ratio",

    //functional    
    "abs()",
    "acos()",
    "asin()",
    "atan()",
    "atan2()",

    "attr()",

    //pseudo class
    ":active",
    ":any-link",

    //@
    //list 
    "additive-symbols (@counter-style)",
    //font
    "@annotation",
    "ascent-override (@font-face)",

    //pseudo element
    "::after (:after)",
    "::backdrop",

    //units
    "&lt;angle>",
    "&lt;angle-percentage>",

    "backdrop-filter",
    "backface-visibility",
    "background",
    "background-attachment",
    "background-blend-mode",
    "background-clip",
    "background-color",
    "background-image",
    "background-origin",
    "background-position",
    "background-position-x",
    "background-position-y",
    "background-repeat",
    "background-size",
    "base-palette (@font-palette-values)",
    "&lt;basic-shape>",
    "::before (:before)",
    ":blank",
    "&lt;blend-mode>",
    "block-size",
    "blur()",
    "border",
    "border-block",
    "border-block-color",
    "border-block-end",
    "border-block-end-color",
    "border-block-end-style",
    "border-block-end-width",
    "border-block-start",
    "border-block-start-color",
    "border-block-start-style",
    "border-block-start-width",
    "border-block-style",
    "border-block-width",
    "border-bottom",
    "border-bottom-color",
    "border-bottom-left-radius",
    "border-bottom-right-radius",
    "border-bottom-style",
    "border-bottom-width",
    "border-collapse",
    "border-color",
    "border-end-end-radius",
    "border-end-start-radius",
    "border-image",
    "border-image-outset",
    "border-image-repeat",
    "border-image-slice",
    "border-image-source",
    "border-image-width",
    "border-inline",
    "border-inline-color",
    "border-inline-end",
    "border-inline-end-color",
    "border-inline-end-style",
    "border-inline-end-width",
    "border-inline-start",
    "border-inline-start-color",
    "border-inline-start-style",
    "border-inline-start-width",
    "border-inline-style",
    "border-inline-width",
    "border-left",
    "border-left-color",
    "border-left-style",
    "border-left-width",
    "border-radius",
    "border-right",
    "border-right-color",
    "border-right-style",
    "border-right-width",
    "border-spacing",
    "border-start-end-radius",
    "border-start-start-radius",
    "border-style",
    "border-top",
    "border-top-color",
    "border-top-left-radius",
    "border-top-right-radius",
    "border-top-style",
    "border-top-width",
    "border-width",
    "bottom",
    "@bottom-left-corner",
    "box-decoration-break",
    "box-shadow",
    "box-sizing",
    "break-after",
    "break-before",
    "break-inside",
    "brightness()",
    ":buffering",
    "calc()",
    "calc-size()",
    "caption-side",
    "caret",
    "caret-color",
    "caret-shape",
    "@character-variant",
    "@charset",
    ":checked",
    "circle()",
    "clamp()",
    "clear",
    "clip-path",
    "clip-rule",
    "&lt;color>",
    "color",
    "color-interpolation-filters",
    "color-mix()",
    "color-scheme",
    "column-count",
    "column-fill",
    "column-gap",
    "column-rule",
    "column-rule-color",
    "column-rule-style",
    "column-rule-width",
    "column-span",
    "column-width",
    "columns",
    "conic-gradient()",
    "contain",
    "contain-intrinsic-block-size",
    "contain-intrinsic-height",
    "contain-intrinsic-inline-size",
    "contain-intrinsic-size",
    "contain-intrinsic-width",
    "container",
    "container-name",
    "container-type",
    "content",
    "content-visibility",
    "contrast()",
    "cos()",
    "&lt;counter>",
    "counter-increment",
    "counter-reset",
    "counter-set",
    "@counter-style",
    "counters()",
    "cross-fade()",
    "cubic-bezier()",
    "::cue",
    "::cue()",
    "::cue-region",
    "::cue-region()",
    ":current",
    "cursor",
    "&lt;custom-ident>",
    "cx",
    "cy",
    "length#cap",
    "length#ch",
    "length#cm",
    "angle#deg",
    "d",
    "&lt;dashed-ident>",
    ":default",
    ":defined",
    "descent-override (@font-face)",
    "::details-content",
    "&lt;dimension>",
    ":dir()",
    "direction",
    ":disabled",
    "display",
    "&lt;display-box>",
    "&lt;display-inside>",
    "&lt;display-internal>",
    "&lt;display-legacy>",
    "&lt;display-listitem>",
    "&lt;display-outside>",
    "dominant-baseline",
    "drop-shadow()",
    "resolution#dpcm",
    "resolution#dpi",
    "resolution#dppx",
    "&lt;easing-function>",
    "element()",
    "ellipse()",
    ":empty",
    "empty-cells",
    ":enabled",
    "env()",
    "exp()",
    "length#em",
    "length#ex",
    "fallback (@counter-style)",
    "field-sizing",
    "::file-selector-button",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "&lt;filter-function>",
    ":first",
    ":first-child",
    "::first-letter (:first-letter)",
    "::first-line (:first-line)",
    ":first-of-type",
    "fit-content()",
    "&lt;flex>",
    "flex",
    "flex-basis",
    "flex-direction",
    "flex-flow",
    "flex-grow",
    "flex-shrink",
    "flex-wrap",
    "flex_value#fr",
    "float",
    "flood-color",
    "flood-opacity",
    ":focus",
    ":focus-visible",
    ":focus-within",
    "font",
    "font-display (@font-face)",
    "@font-face",
    "font-family",
    "font-family (@font-face)",
    "font-family (@font-palette-values)",
    "font-feature-settings",
    "font-feature-settings (@font-face)",
    "@font-feature-values",
    "font-kerning",
    "font-language-override",
    "font-optical-sizing",
    "font-palette",
    "@font-palette-values",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-stretch (@font-face)",
    "font-style",
    "font-style (@font-face)",
    "font-synthesis",
    "font-synthesis-position",
    "font-synthesis-small-caps",
    "font-synthesis-style",
    "font-synthesis-weight",
    "font-variant",
    "font-variant-alternates",
    "font-variant-caps",
    "font-variant-east-asian",
    "font-variant-emoji",
    "font-variant-ligatures",
    "font-variant-numeric",
    "font-variant-position",
    "font-variation-settings",
    "font-variation-settings (@font-face)",
    "font-weight",
    "font-weight (@font-face)",
    "forced-color-adjust",
    "format()",
    "&lt;frequency>",
    "&lt;frequency-percentage>",
    ":fullscreen",
    ":future",
    "angle#grad",
    "gap",
    "&lt;gradient>",
    "::grammar-error",
    "grayscale()",
    "grid",
    "grid-area",
    "grid-auto-columns",
    "grid-auto-flow",
    "grid-auto-rows",
    "grid-column",
    "grid-column-end",
    "grid-column-start",
    "grid-row",
    "grid-row-end",
    "grid-row-start",
    "grid-template",
    "grid-template-areas",
    "grid-template-columns",
    "grid-template-rows",
    "frequency#Hz",
    "hanging-punctuation",
    ":has()",
    ":has-slotted",
    "height",
    "::highlight()",
    "@historical-forms",
    ":host",
    ":host()",
    ":host-context()",
    ":hover",
    "hsl()",
    "hue-rotate()",
    "hwb()",
    "hyphenate-character",
    "hyphenate-limit-chars",
    "hyphens",
    "hypot()",
    "&lt;ident>",
    "&lt;image>",
    "image()",
    "image-orientation",
    "image-rendering",
    "image-resolution",
    "image-set()",
    "@import",
    ":in-range",
    ":indeterminate",
    "inherit",
    "inherits (@property)",
    "initial",
    "initial-letter",
    "initial-letter-align",
    "initial-value (@property)",
    "inline-size",
    "inset",
    "inset()",
    "inset-block",
    "inset-block-end",
    "inset-block-start",
    "inset-inline",
    "inset-inline-end",
    "inset-inline-start",
    "&lt;integer>",
    "interpolate-size",
    ":invalid",
    "invert()",
    ":is()",
    "isolation",
    "length#ic",
    "length#in",
    "justify-content",
    "justify-items",
    "justify-self",
    "@keyframes",
    "lab()",
    ":lang()",
    ":last-child",
    ":last-of-type",
    "@layer",
    "layer()",
    "layer() (@import)",
    "lch()",
    "leader()",
    ":left",
    "left",
    "@left-top",
    "&lt;length>",
    "&lt;length-percentage>",
    "letter-spacing",
    "light-dark()",
    "lighting-color",
    "line-break",
    "line-clamp",
    "line-gap-override (@font-face)",
    "line-height",
    "line-height-step",
    "&lt;line-style>",
    "linear-gradient()",
    ":link",
    "list-style",
    "list-style-image",
    "list-style-position",
    "list-style-type",
    "local()",
    ":local-link",
    "log()",
    "length#mm",
    "margin",
    "margin-block",
    "margin-block-end",
    "margin-block-start",
    "margin-bottom",
    "margin-inline",
    "margin-inline-end",
    "margin-inline-start",
    "margin-left",
    "margin-right",
    "margin-top",
    "margin-trim",
    "::marker",
    "marker",
    "marker-end",
    "marker-mid",
    "marker-start",
    "marks (@page)",
    "mask",
    "mask-border",
    "mask-border-mode",
    "mask-border-outset",
    "mask-border-repeat",
    "mask-border-slice",
    "mask-border-source",
    "mask-border-width",
    "mask-clip",
    "mask-composite",
    "mask-image",
    "mask-mode",
    "mask-origin",
    "mask-position",
    "mask-repeat",
    "mask-size",
    "mask-type",
    "math-depth",
    "math-shift",
    "math-style",
    "matrix()",
    "matrix3d()",
    "max()",
    "max-block-size",
    "max-height",
    "max-inline-size",
    "max-lines",
    "max-width",
    "@media",
    "min()",
    "min-block-size",
    "min-height",
    "min-inline-size",
    "min-width",
    "minmax()",
    "mix-blend-mode",
    "mod()",
    ":modal",
    ":muted",
    "time#ms",
    "@namespace",
    "navigation (@view-transition)",
    "negative (@counter-style)",
    ":not()",
    ":nth-child()",
    ":nth-last-child()",
    ":nth-last-of-type()",
    ":nth-of-type()",
    "&lt;number>",
    "object-fit",
    "object-position",
    "offset",
    "offset-anchor",
    "offset-distance",
    "offset-path",
    "offset-position",
    "offset-rotate",
    "oklab()",
    "oklch()",
    ":only-child",
    ":only-of-type",
    "opacity",
    "opacity()",
    ":optional",
    "order",
    "@ornaments",
    "orphans",
    ":out-of-range",
    "outline",
    "outline-color",
    "outline-offset",
    "outline-style",
    "outline-width",
    "overflow",
    "overflow-anchor",
    "overflow-block",
    "overflow-clip-margin",
    "overflow-inline",
    "overflow-wrap",
    "overflow-x",
    "overflow-y",
    "overlay",
    "override-colors (@font-palette-values)",
    "overscroll-behavior",
    "overscroll-behavior-block",
    "overscroll-behavior-inline",
    "overscroll-behavior-x",
    "overscroll-behavior-y",
    "length#pc",
    "length#pt",
    "length#px",
    "pad (@counter-style)",
    "padding",
    "padding-block",
    "padding-block-end",
    "padding-block-start",
    "padding-bottom",
    "padding-inline",
    "padding-inline-end",
    "padding-inline-start",
    "padding-left",
    "padding-right",
    "padding-top",
    "@page",
    "page",
    "page-break-after",
    "page-break-before",
    "page-break-inside",
    "page-orientation (@page)",
    "paint()",
    "paint-order",
    "palette-mix()",
    "::part()",
    ":past",
    "path()",
    ":paused",
    "&lt;percentage>",
    "perspective",
    "perspective()",
    "perspective-origin",
    ":picture-in-picture",
    "place-content",
    "place-items",
    "place-self",
    "::placeholder",
    ":placeholder-shown",
    ":playing",
    "pointer-events",
    "polygon()",
    ":popover-open",
    "&lt;position>",
    "position",
    "position-anchor",
    "position-area",
    "@position-try",
    "position-try",
    "position-try-fallbacks",
    "position-try-order",
    "position-visibility",
    "pow()",
    "prefix (@counter-style)",
    "print-color-adjust",
    "@property",
    "length#Q",
    "quotes",
    "angle#rad",
    "length#rem",
    "r",
    "radial-gradient()",
    "range (@counter-style)",
    "&lt;ratio>",
    "ray()",
    ":read-only",
    ":read-write",
    "rect()",
    "rem()",
    "repeat()",
    "repeating-conic-gradient()",
    "repeating-linear-gradient()",
    "repeating-radial-gradient()",
    ":required",
    "resize",
    "&lt;resolution>",
    "reversed()",
    "revert",
    "rgb()",
    ":right",
    "right",
    "@right-top",
    ":root",
    "rotate",
    "rotate()",
    "rotate3d()",
    "rotateX()",
    "rotateY()",
    "rotateZ()",
    "round()",
    "row-gap",
    "ruby-align",
    "ruby-merge",
    "ruby-position",
    "rx",
    "ry",
    "saturate()",
    "scale",
    "scale()",
    "scale3d()",
    "scaleX()",
    "scaleY()",
    "scaleZ()",
    ":scope",
    "@scope",
    "scroll()",
    "scroll-behavior",
    "scroll-margin",
    "scroll-margin-block",
    "scroll-margin-block-end",
    "scroll-margin-block-start",
    "scroll-margin-bottom",
    "scroll-margin-inline",
    "scroll-margin-inline-end",
    "scroll-margin-inline-start",
    "scroll-margin-left",
    "scroll-margin-right",
    "scroll-margin-top",
    "scroll-padding",
    "scroll-padding-block",
    "scroll-padding-block-end",
    "scroll-padding-block-start",
    "scroll-padding-bottom",
    "scroll-padding-inline",
    "scroll-padding-inline-end",
    "scroll-padding-inline-start",
    "scroll-padding-left",
    "scroll-padding-right",
    "scroll-padding-top",
    "scroll-snap-align",
    "scroll-snap-stop",
    "scroll-snap-type",
    "scroll-timeline",
    "scroll-timeline-axis",
    "scroll-timeline-name",
    "scrollbar-color",
    "scrollbar-gutter",
    "scrollbar-width",
    ":seeking",
    "::selection",
    "selector()",
    "sepia()",
    "shape-image-threshold",
    "shape-margin",
    "shape-outside",
    "shape-rendering",
    "sign()",
    "sin()",
    "size (@page)",
    "size-adjust (@font-face)",
    "skew()",
    "skewX()",
    "skewY()",
    "::slotted()",
    "speak-as (@counter-style)",
    "::spelling-error",
    "sqrt()",
    "src (@font-face)",
    ":stalled",
    "@starting-style",
    ":state()",
    "steps()",
    "stop-color",
    "stop-opacity",
    "&lt;string>",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "@styleset",
    "@stylistic",
    "suffix (@counter-style)",
    "@supports",
    "supports() (@import)",
    "@swash",
    "symbols (@counter-style)",
    "symbols()",
    "syntax (@property)",
    "system (@counter-style)",
    "time#s",
    "angle#turn",
    "tab-size",
    "table-layout",
    "tan()",
    ":target",
    "target-counter()",
    "target-counters()",
    "::target-text",
    "target-text()",
    ":target-within",
    "text-align",
    "text-align-last",
    "text-anchor",
    "text-box",
    "text-box-edge",
    "text-box-trim",
    "text-combine-upright",
    "text-decoration",
    "text-decoration-color",
    "text-decoration-line",
    "text-decoration-skip",
    "text-decoration-skip-ink",
    "text-decoration-style",
    "text-decoration-thickness",
    "text-emphasis",
    "text-emphasis-color",
    "text-emphasis-position",
    "text-emphasis-style",
    "text-indent",
    "text-justify",
    "text-orientation",
    "text-overflow",
    "text-rendering",
    "text-shadow",
    "text-size-adjust",
    "text-spacing-trim",
    "text-transform",
    "text-underline-offset",
    "text-underline-position",
    "text-wrap",
    "text-wrap-mode",
    "text-wrap-style",
    "&lt;time>",
    "&lt;time-percentage>",
    "timeline-scope",
    "top",
    "@top-left-corner",
    "touch-action",
    "transform",
    "transform-box",
    "&lt;transform-function>",
    "transform-origin",
    "transform-style",
    "transition",
    "transition-behavior",
    "transition-delay",
    "transition-duration",
    "transition-property",
    "transition-timing-function",
    "translate",
    "translate()",
    "translate3d()",
    "translateX()",
    "translateY()",
    "translateZ()",
    "type()",
    "unicode-bidi",
    "unicode-range (@font-face)",
    "unset",
    "&lt;url>",
    "url()",
    ":user-invalid",
    "user-select",
    ":user-valid",
    "length#vh",
    "length#vmax",
    "length#vmin",
    "length#vw",
    ":valid",
    "var()",
    "vector-effect",
    "vertical-align",
    "view()",
    "view-timeline",
    "view-timeline-axis",
    "view-timeline-inset",
    "view-timeline-name",
    "::view-transition",
    "@view-transition",
    "::view-transition-group()",
    "::view-transition-image-pair()",
    "view-transition-name",
    "::view-transition-new()",
    "::view-transition-old()",
    "visibility",
    ":visited",
    ":volume-locked",
    ":where()",
    "white-space",
    "white-space-collapse",
    "widows",
    "width",
    "will-change",
    "word-break",
    "word-spacing",
    "word-wrap",
    "writing-mode",
    "resolution#x",
    "x",
    ":xr-overlay",
    "y",
    "z-index",
    "zoom"
];

//f(x) function
const generatecss = () => {
    csslist.forEach((item, index) => {
        document.getElementById('main').innerHTML += `
        <tr>
            <td>
                ${item}
            </td>
            <td>
                <input type='checkbox' id="check${index}"/>
            </td>
            <td>
                <textarea id="text${index}"></textarea>
            </td>
        </tr>
    `

    })
}
const saveajson = () => {
    const data = csslist.map((item, index) => (
        {
            css: item,
            checks: document.getElementById(`check${index}`).checked,
            specs: document.getElementById(`text${index}`).value
        }
    ))
    console.log(data)
    try{
        const link = document.createElement('a');
        link.href = URL.createObjectURL(new Blob([JSON.stringify(data)],{type:'application/json'}));
        link.download = "data.json";
        link.click();
        URL.revokeObjectURL(link.href);
        link.remove();
        console.log('done')
    }
    catch(err){
        console.error(err)
    }
}
const loadajson = () => {
    const file = document.createElement('input');
    file.type = 'file';
    file.style.display = 'none';
    file.onchange = ( event ) =>{
        if(event.target.files[0]){
            console.log(event.target.files)
            const reader = new FileReader();
            reader.onload = (e) => {
                try{
                const reqData = JSON.parse(e.target.result);
                // console.log(e.target.result)
                console.log(reqData)
                reqData.forEach((item,index)=>{
                    document.getElementById(`check${index}`).checked = item.checks
                    document.getElementById(`text${index}`).value = item.specs
                })
                }
                catch(err){
                    console.error(err)
                }
            }
            reader.readAsText(event.target.files[0])
        }
    }
    file.click()
}
const loading = () => {
    window.addEventListener('load',()=>{
        document.getElementsByTagName('main')[0].style.display = "block";
        document.getElementsByClassName('loader')[0].style.display = 'none';
    })
}
// y = f(x) main
(() => {
    generatecss();
    loading();
})();

